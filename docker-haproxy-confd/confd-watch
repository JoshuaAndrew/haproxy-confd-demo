#!/bin/bash

# expose non-zero exit code of the pipeline and fail fast
set -eo pipefail

if [ -z "$ETCD" ]
then
  echo "Missing ETCD environment variable"
  exit -1
fi

function config_fail()
{
  echo "Failed to start due to config error"
  exit -1
}

echo "[haproxy] booting container. ETCD: $ETCD."

# Try to make initial configuration every 5 seconds 3 times
n=0
until confd -debug -verbose -onetime -node $ETCD -config-file /etc/confd/conf.d/haproxy.toml; do
    if [ "$n" -eq "4" ];  then config_fail; fi
    echo "[haproxy] waiting for confd to create initial haproxy configuration."
    n=$((n+1))
    sleep 5    
done

# Put a continual polling `confd` process into the background to watch
# for changes every 10 seconds
confd -debug -verbose -interval 10 -node $ETCD -config-file /etc/confd/conf.d/haproxy.toml &
echo "[haproxy] confd is now monitoring etcd for changes..."

# Force haproxy service to reload using the generated config
echo "[haproxy] starting haproxy service..."
service haproxy reload

# tail is keep running to allow the script to continue running
tail -f /dev/null